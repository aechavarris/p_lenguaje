/**
 * Especificación JavaCC para la Práctica 2 (Procesadores de Lenguajes)
 * Javier Fabra - jfabra@unizar.es
 * v1.2 - 2021/03/08
 */
options
{
  static = true;
  ignore_case = true;
}

PARSER_BEGIN(CompiladorClases)

public class CompiladorClases
{
  public static void main(String args []) throws ParseException
  {
    CompiladorClases parser = new CompiladorClases(System.in);
    System.out.println("Leyendo de la entrada estándar...");
    try { 
    	CompiladorClases.programa();
    	System.out.println("Analizado correctamente");
    	
    } catch (Exception e) {
		System.out.println("NOK.");
        System.out.println(e.getMessage());
        CompiladorClases.ReInit(System.in);
	}
    catch (Error e) { 
        System.out.println("Oops.");
        System.out.println(e.getMessage());
	} 
  }
}

PARSER_END(CompiladorClases)

SKIP :
{
  " "
| "\r"
| "\t"
| "\n"
}

TOKEN : /* PALABRAS RESERVADAS */
{
  < tPROGRAMA : "programa" >
  {
    System.out.println("PROGRAMA");
  }
| < tACCION : "accion" >
  {
    System.out.println("ACCION");
  }
| < tPRINCIPIO : "principio" >
  {
    System.out.println("PRINCIPIO");
  }  
| < tFIN : "fin" >
  {
    System.out.println("FIN");
  }
| < tMQ : "mq" >
  {
    System.out.println("MQ");
  }
| < tFMQ : "fmq" >
  {
    System.out.println("FMQ");
  }
| < tSI : "si" >
  {
    System.out.println("SI");
  }
| < tFSI : "fsi" >
  {
    System.out.println("FSI");
  }
| < tESCRIBIR : "escribir" >
  {
    System.out.println("ESCRIBIR");
  }
| < tENTACAR : "entacar" >
  {
    System.out.println("ENTACAR");
  }
| < tCARAENT : "caraent" >
  {
    System.out.println("CARAENT");
  }              
}

TOKEN : /* TIPOS DE DATOS */
{
  < tENTERO : "entero" >
  {
    System.out.println("ENTERO");
  }
| < tDECIMAL : "decimal" >
  {
    System.out.println("DECIMAL");
  }
| < tBOOLEANO : "booleano" >
  {
    System.out.println("BOOLEANO");
  }
| < tCARACTER : "caracter" >
  {
    System.out.println("CARACTER");
  }
| < tVAL : "val" >
  {
    System.out.println("VALOR");
  }
| < tREF : "ref" >
  {
    System.out.println("REFERENCIA");
  }    
}

TOKEN : /* AGRUPACIONES */
{
  <  tLLAVE_IZQ : "{" >
  {
    System.out.println("LLAVE_IZQ");
  }
| <  tLLAVE_DCHA : "}" >
  {
    System.out.println("LLAVE_DCHA");
  }
}

TOKEN : /* VALORES */
{
  < #DIGITO : ["0"-"9"] >
| < #LETRA : ["a"-"z","_","0"-"9"] >
| < #BOOLEAN : "true" | "false" >
| < #ID : "/^([a-z,_])([a-z,_,0-9]+)([a-z,0-9])$/" >

| < tVALOR_ENTERO : ("-")?(< DIGITO >)+ >
  {
    System.out.println("VALOR_ENTERO (Valor: " + matchedToken + ")");
  }
| <  tVALOR_DECIMAL : ("-")?(< DIGITO >)+"."(< DIGITO >)+ >
  {
    System.out.println("VALOR_DECIMAL (Valor: " + matchedToken + ")");
  }
| <  tIDENTIFICADOR : (< LETRA >)+ >
  {
    System.out.println("IDENTIFICADOR (Valor: " + matchedToken + ")");
  }
| < tVALOR_BOOLEANO : ("-")?(< BOOLEAN >) >
  {
    System.out.println("VALOR_BOOLEANO (Valor: " + matchedToken + ")");
  }  
}


TOKEN : /* OPERADORES */
{
  <  tASIGNACION : "=" >
  {
    System.out.println("ASIGNACION");
  }
| <  tFIN_SENTENCIA : ";" >
  {
    System.out.println("FIN_SENTENCIA");
  }
| <  tCOMA : "," >
  {
    System.out.println("COMA");
  }
}


void programa():
{
}
{
  < tPROGRAMA > < tIDENTIFICADOR > < tFIN_SENTENCIA > (declaracion_variables()) (declaracion_acciones())
  (bloque_sentencias())
}

void sentencia():
{
}
{
  	(leer()) < tFIN_SENTENCIA >
 |  (escribir()) < tFIN_SENTENCIA >
 |  (asignacion()) 
 |	(invocacion_accion())
 |	(seleccion()) 
 |	(mientras_que())
}

void PRINCIPIO():
{
}
{
  	< tPRINCIPIO > < tIDENTIFICADOR > "{" (sentencia())* "}"
}

void declaracion_variables():
{
  
}
{
  	( declaracion() ";" )*
}

void declaracion():
{
}
{
  	tipo_variables() identificadores()
}

void tipo_variables():
{
}
{
  	<tENTERO> | <tCARACTER> | <tBOOLEANO>
}

void identificadores():
{
}
{
  	<tIDENTIFICADOR> ( "," <tIDENTIFICADOR> )*
}

void declaracion_acciones():
{
}
{
  	( declaracion_accion() )*
}

void declaracion_accion():
{
}
{
  	cabecera_accion() ";" declaracion_variables() declaracion_acciones() bloque_sentencias()
}

void cabecera_accion():
{
}
{
  	<tACCION> <tIDENTIFICADOR> parametros_formales()
}

void parametros_formales():
{
}
{
  	< tFIN_SENTENCIA>
}

void parametros():
{
}
{
  	clase_parametros() tipo_variables() lista_parametros()
}

void lista_parametros():
{
}
{
  	< tFIN_SENTENCIA >
}

void clase_parametros():
{
}
{
  	<tVAL> | <tREF>
}

void bloque_sentencias():
{
}
{
  	<tPRINCIPIO> lista_sentencias() <tFIN>
}

void lista_sentencias():
{
}
{
  	< tFIN_SENTENCIA >
}

void leer():
{
}
{
  	< tPRINCIPIO > < tIDENTIFICADOR > "{" (sentencia())* "}"
}

void escribir():
{
}
{
  	< tPRINCIPIO > < tIDENTIFICADOR > "{" (sentencia())* "}"
}

void asignacion():
{
}
{
  	< tPRINCIPIO > < tIDENTIFICADOR > "{" (sentencia())* "}"
}

void invocacion_accion():
{
}
{
  	< tPRINCIPIO > < tIDENTIFICADOR > "{" (sentencia())* "}"
}

void seleccion():
{
}
{
  	< tPRINCIPIO > < tIDENTIFICADOR > "{" (sentencia())* "}"
}
void mientras_que():
{
}
{
  	< tPRINCIPIO > < tIDENTIFICADOR > "{" (sentencia())* "}"
}