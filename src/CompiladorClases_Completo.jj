/**
 * Especificaci√≥n JavaCC para la Pr√°ctica 2 (Procesadores de Lenguajes)
 * Javier Fabra - jfabra@unizar.es
 * v1.2 - 2021/03/08
 */
options
{
  static = true;
  ignore_case = true;
}

PARSER_BEGIN(CompiladorClases)

public class CompiladorClases
{
  public static void main(String args []) throws ParseException
  {
    CompiladorClases parser = new CompiladorClases(System.in);
    System.out.println("Leyendo de la entrada est√°ndar...");
    try { 
    	CompiladorClases.programa();
    	System.out.println("Analizado correctamente");
    	
    } catch (TokenMgrError e) {
		//Error lÈxico

	} catch (ParseException e) {
		//Error sint·ctico

	} catch (Error e) {
		//Error general

	} 
  }
}

PARSER_END(CompiladorClases)

SKIP :
{
  " "
| "\r"
| "\t"
| "\n"
}

TOKEN : /* PALABRAS RESERVADAS */
{
  < tPROGRAMA : "programa" >
  {
    System.out.println("PROGRAMA");
  }
| < tMETODO : "metodo" >
  {
    System.out.println("METODO");
  }
  
}

TOKEN : /* TIPOS DE DATOS */
{
  < tENTERO : "entero" >
  {
    System.out.println("ENTERO");
  }
| < tDECIMAL : "decimal" >
  {
    System.out.println("DECIMAL");
  }
| < tBOOLEANO : "booleano" >
  {
    System.out.println("BOOLEANO");
  }
}

TOKEN : /* AGRUPACIONES */
{
  <  tLLAVE_IZQ : "{" >
  {
    System.out.println("LLAVE_IZQ");
  }
| <  tLLAVE_DCHA : "}" >
  {
    System.out.println("LLAVE_DCHA");
  }
}

TOKEN : /* VALORES */
{
  < #DIGITO : ["0"-"9"] >
| < #LETRA : ["a"-"z","_","0"-"9"] >
| < tVALOR_ENTERO : ("-")?(< DIGITO >)+ >
  {
    System.out.println("VALOR_ENTERO (Valor: " + matchedToken + ")");
  }
| <  tVALOR_DECIMAL : ("-")?(< DIGITO >)+"."(< DIGITO >)+ >
  {
    System.out.println("VALOR_DECIMAL (Valor: " + matchedToken + ")");
  }
| <  tIDENTIFICADOR : (< LETRA >)+ >
  {
    System.out.println("IDENTIFICADOR (Valor: " + matchedToken + ")");
  }
}


TOKEN : /* OPERADORES */
{
  <  tASIGNACION : "=" >
  {
    System.out.println("ASIGNACION");
  }
| <  tFIN_SENTENCIA : ";" >
  {
    System.out.println("FIN_SENTENCIA");
  }
}


void programa():
{
}
{
  < tPROGRAMA > < tIDENTIFICADOR > < tFIN_SENTENCIA > (declaracion_variables())+ (declaracion_acciones())+
  (bloque_sentencias())+
}

void sentencia():
{
}
{
  	(leer())+ < tFIN_SENTENCIA >
 |  (escribir())+ < tFIN_SENTENCIA >
 |  (asignacion())+ 
 |	(invocacion_accion())+ 
 |	(seleccion())+ 
 |	(mientras_que())+ 
}

void metodo():
{
}
{
  	< tMETODO > < tIDENTIFICADOR > "{" (sentencia())* "}"
}

void declaracion_variables():
{
}
{
  	< tMETODO > < tIDENTIFICADOR > "{" (sentencia())* "}"
}

void declaracion_acciones():
{
}
{
  	< tMETODO > < tIDENTIFICADOR > "{" (sentencia())* "}"
}

void bloque_sentencias():
{
}
{
  	< tMETODO > < tIDENTIFICADOR > "{" (sentencia())* "}"
}

void leer():
{
}
{
  	< tMETODO > < tIDENTIFICADOR > "{" (sentencia())* "}"
}

void escribir():
{
}
{
  	< tMETODO > < tIDENTIFICADOR > "{" (sentencia())* "}"
}

void asignacion():
{
}
{
  	< tMETODO > < tIDENTIFICADOR > "{" (sentencia())* "}"
}

void invocacion_accion():
{
}
{
  	< tMETODO > < tIDENTIFICADOR > "{" (sentencia())* "}"
}

void seleccion():
{
}
{
  	< tMETODO > < tIDENTIFICADOR > "{" (sentencia())* "}"
}
void mientras_que():
{
}
{
  	< tMETODO > < tIDENTIFICADOR > "{" (sentencia())* "}"
}