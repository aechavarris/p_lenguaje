; Programa maximo_comun_divisor.
	ENP  L0
error_inicializada:
;Escribir error en runtime.
	STC  69
	WRT  0
	STC  114
	WRT  0
	STC  114
	WRT  0
	STC  111
	WRT  0
	STC  114
	WRT  0
	STC  32
	WRT  0
	STC  101
	WRT  0
	STC  110
	WRT  0
	STC  32
	WRT  0
	STC  114
	WRT  0
	STC  117
	WRT  0
	STC  110
	WRT  0
	STC  116
	WRT  0
	STC  105
	WRT  0
	STC  109
	WRT  0
	STC  101
	WRT  0
	STC  58
	WRT  0
	STC  32
	WRT  0
	STC  118
	WRT  0
	STC  97
	WRT  0
	STC  114
	WRT  0
	STC  105
	WRT  0
	STC  97
	WRT  0
	STC  98
	WRT  0
	STC  108
	WRT  0
	STC  101
	WRT  0
	STC  32
	WRT  0
	STC  110
	WRT  0
	STC  111
	WRT  0
	STC  32
	WRT  0
	STC  105
	WRT  0
	STC  110
	WRT  0
	STC  105
	WRT  0
	STC  99
	WRT  0
	STC  105
	WRT  0
	STC  97
	WRT  0
	STC  108
	WRT  0
	STC  105
	WRT  0
	STC  122
	WRT  0
	STC  97
	WRT  0
	STC  100
	WRT  0
	STC  97
	WRT  0
	STC  46
	WRT  0
	STC  10
	WRT  0
	JMP  FIN_PROGRAMA
; Accion dato.
L1:
; Comienzo de la accion dato.
; Direccion de la variable d.
	SRF  1  4
	STC  0
; Asignacion.
	ASG
L2:
; MQ.
; Acceso a la variable d.
	SRF  1  4
	DRF
;Comprobamos si d esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	STC  0
	LTE
; Salir del bucle si la guarda se evalua a falso.
	JMF  L3
; Escribir.
; cadena 'Escribe un numero: '.
	STC  69
	WRT  0
	STC  115
	WRT  0
	STC  99
	WRT  0
	STC  114
	WRT  0
	STC  105
	WRT  0
	STC  98
	WRT  0
	STC  101
	WRT  0
	STC  32
	WRT  0
	STC  117
	WRT  0
	STC  110
	WRT  0
	STC  32
	WRT  0
	STC  110
	WRT  0
	STC  117
	WRT  0
	STC  109
	WRT  0
	STC  101
	WRT  0
	STC  114
	WRT  0
	STC  111
	WRT  0
	STC  58
	WRT  0
	STC  32
	WRT  0
; Leer.
	SRF  1  4
	RD  1
; SI.
; Acceso a la variable d.
	SRF  1  4
	DRF
;Comprobamos si d esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	STC  0
	LTE
	JMF  L4
; ENT.
; Escribir.
; cadena 'El numero debe ser postivo.'.
	STC  69
	WRT  0
	STC  108
	WRT  0
	STC  32
	WRT  0
	STC  110
	WRT  0
	STC  117
	WRT  0
	STC  109
	WRT  0
	STC  101
	WRT  0
	STC  114
	WRT  0
	STC  111
	WRT  0
	STC  32
	WRT  0
	STC  100
	WRT  0
	STC  101
	WRT  0
	STC  98
	WRT  0
	STC  101
	WRT  0
	STC  32
	WRT  0
	STC  115
	WRT  0
	STC  101
	WRT  0
	STC  114
	WRT  0
	STC  32
	WRT  0
	STC  112
	WRT  0
	STC  111
	WRT  0
	STC  115
	WRT  0
	STC  116
	WRT  0
	STC  105
	WRT  0
	STC  118
	WRT  0
	STC  111
	WRT  0
	STC  46
	WRT  0
; Escribir.
	STC  13
	WRT  0
; Escribir.
	STC  10
	WRT  0
L4:
; Fin SI:
; Fin de la iteracion. Saltar a la cabecera del bucle.
	JMP  L2
L3:
; Fin MQ.
; Fin de la accion / funcion dato.
	CSF
; Accion mcd.
L5:
; Reservamos direccion.
; Inicializamos con valor centinela.
	SRF  0  3
	STC  32768
	ASG 
; Comienzo de la accion mcd.
; Direccion de la variable r.
	SRF  0  3
; Acceso a la variable a.
	SRF  1  5
	DRF
;Comprobamos si a esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
; Acceso a la variable b.
	SRF  1  6
	DRF
;Comprobamos si b esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	MOD
; Asignacion.
	ASG
L6:
; MQ.
; Acceso a la variable r.
	SRF  0  3
	DRF
;Comprobamos si r esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	STC  0
	NEQ
; Salir del bucle si la guarda se evalua a falso.
	JMF  L7
; Direccion de la variable a.
	SRF  1  5
; Acceso a la variable b.
	SRF  1  6
	DRF
;Comprobamos si b esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
; Asignacion.
	ASG
; Direccion de la variable b.
	SRF  1  6
; Acceso a la variable r.
	SRF  0  3
	DRF
;Comprobamos si r esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
; Asignacion.
	ASG
; Direccion de la variable r.
	SRF  0  3
; Acceso a la variable a.
	SRF  1  5
	DRF
;Comprobamos si a esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
; Acceso a la variable b.
	SRF  1  6
	DRF
;Comprobamos si b esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	MOD
; Asignacion.
	ASG
; Fin de la iteracion. Saltar a la cabecera del bucle.
	JMP  L6
L7:
; Fin MQ.
; Direccion de la variable m.
	SRF  1  3
; Acceso a la variable b.
	SRF  1  6
	DRF
;Comprobamos si b esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
; Asignacion.
	ASG
; Fin de la accion / funcion mcd.
	CSF
L0:
; Comienzo del programa maximo_comun_divisor.
; Reservamos direccion.
; Inicializamos con valor centinela.
	SRF  0  3
	STC  32768
	ASG 
; Reservamos direccion.
; Inicializamos con valor centinela.
	SRF  0  4
	STC  32768
	ASG 
; Reservamos direccion.
; Inicializamos con valor centinela.
	SRF  0  5
	STC  32768
	ASG 
; Reservamos direccion.
; Inicializamos con valor centinela.
	SRF  0  6
	STC  32768
	ASG 
; Invocacion a dato.
	OSF  6  0 L1
; Direccion de la variable a.
	SRF  0  5
; Acceso a la variable d.
	SRF  0  4
	DRF
;Comprobamos si d esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
; Asignacion.
	ASG
; Invocacion a dato.
	OSF  6  0 L1
; Direccion de la variable b.
	SRF  0  6
; Acceso a la variable d.
	SRF  0  4
	DRF
;Comprobamos si d esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
; Asignacion.
	ASG
; Invocacion a mcd.
	OSF  6  0 L5
; Escribir.
; cadena 'El MCD es: '.
	STC  69
	WRT  0
	STC  108
	WRT  0
	STC  32
	WRT  0
	STC  77
	WRT  0
	STC  67
	WRT  0
	STC  68
	WRT  0
	STC  32
	WRT  0
	STC  101
	WRT  0
	STC  115
	WRT  0
	STC  58
	WRT  0
	STC  32
	WRT  0
; Escribir.
; Acceso a la variable m.
	SRF  0  3
	DRF
;Comprobamos si m esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	WRT  1
; Escribir.
	STC  13
	WRT  0
; Escribir.
	STC  10
	WRT  0
FIN_PROGRAMA:
; Fin de programa maximo_comun_divisor.
	LVP
