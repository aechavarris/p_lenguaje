; Programa fibbonaci.
	ENP  L0
	JMP  L1
error_inicializada:
;Escribir error en runtime.
	STC  69
	WRT  0
	STC  114
	WRT  0
	STC  114
	WRT  0
	STC  111
	WRT  0
	STC  114
	WRT  0
	STC  32
	WRT  0
	STC  101
	WRT  0
	STC  110
	WRT  0
	STC  32
	WRT  0
	STC  114
	WRT  0
	STC  117
	WRT  0
	STC  110
	WRT  0
	STC  116
	WRT  0
	STC  105
	WRT  0
	STC  109
	WRT  0
	STC  101
	WRT  0
	STC  58
	WRT  0
	STC  32
	WRT  0
	STC  118
	WRT  0
	STC  97
	WRT  0
	STC  114
	WRT  0
	STC  105
	WRT  0
	STC  97
	WRT  0
	STC  98
	WRT  0
	STC  108
	WRT  0
	STC  101
	WRT  0
	STC  32
	WRT  0
	STC  110
	WRT  0
	STC  111
	WRT  0
	STC  32
	WRT  0
	STC  105
	WRT  0
	STC  110
	WRT  0
	STC  105
	WRT  0
	STC  99
	WRT  0
	STC  105
	WRT  0
	STC  97
	WRT  0
	STC  108
	WRT  0
	STC  105
	WRT  0
	STC  122
	WRT  0
	STC  97
	WRT  0
	STC  100
	WRT  0
	STC  97
	WRT  0
	STC  46
	WRT  0
	STC  10
	WRT  0
	JMP  FIN_PROGRAMA
L1:
; Reservamos direccion.
; Inicializamos con valor centinela.
	SRF  0  3
	STC  32768
	ASG 
; Reservamos direccion.
; Inicializamos con valor centinela.
	SRF  0  4
	STC  32768
	ASG 
; Accion cambiar_de_linea.
L2:
; Comienzo de la accion cambiar_de_linea.
; Escribir.
	STC  13
	WRT  0
	STC  10
	WRT  0
; Fin de la accion / funcion cambiar_de_linea.
	CSF
; Accion dato.
L3:
; Reservamos direccion.
; Inicializamos con valor centinela.
	SRF  0  4
	STC  32768
	ASG 
; Accion pedir_dato.
L4:
; Comienzo de la accion pedir_dato.
; Escribir.
; cadena 'Escribe un numero: '.
	STC  69
	WRT  0
	STC  115
	WRT  0
	STC  99
	WRT  0
	STC  114
	WRT  0
	STC  105
	WRT  0
	STC  98
	WRT  0
	STC  101
	WRT  0
	STC  32
	WRT  0
	STC  117
	WRT  0
	STC  110
	WRT  0
	STC  32
	WRT  0
	STC  110
	WRT  0
	STC  117
	WRT  0
	STC  109
	WRT  0
	STC  101
	WRT  0
	STC  114
	WRT  0
	STC  111
	WRT  0
	STC  58
	WRT  0
	STC  32
	WRT  0
; Leer.
	SRF  1  3
	RD  1
; Fin de la accion / funcion pedir_dato.
	CSF
; Comienzo de la accion dato.
; Direccion de la variable dato.
	SRF  0  3
	STC  0
; Asignacion.
	ASG
; Direccion de la variable correcto.
	SRF  0  4
	STC  0
; Asignacion.
	ASG
L5:
; MQ.
; Acceso a la variable correcto.
	SRF  0  4
	DRF
;Comprobamos si correcto esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	NGB
; Salir del bucle si la guarda se evalua a falso.
	JMF  L6
; Invocacion a pedir_dato.
	OSF  4  0 L4
; Direccion de la variable correcto.
	SRF  0  4
; Acceso a la variable dato.
	SRF  0  3
	DRF
;Comprobamos si dato esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	DRF
	STC  0
	GT
; Asignacion.
	ASG
; SI.
; Acceso a la variable correcto.
	SRF  0  4
	DRF
;Comprobamos si correcto esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	NGB
	JMF  L7
; ENT.
; Escribir.
; cadena 'El numero debe ser postivo.'.
	STC  69
	WRT  0
	STC  108
	WRT  0
	STC  32
	WRT  0
	STC  110
	WRT  0
	STC  117
	WRT  0
	STC  109
	WRT  0
	STC  101
	WRT  0
	STC  114
	WRT  0
	STC  111
	WRT  0
	STC  32
	WRT  0
	STC  100
	WRT  0
	STC  101
	WRT  0
	STC  98
	WRT  0
	STC  101
	WRT  0
	STC  32
	WRT  0
	STC  115
	WRT  0
	STC  101
	WRT  0
	STC  114
	WRT  0
	STC  32
	WRT  0
	STC  112
	WRT  0
	STC  111
	WRT  0
	STC  115
	WRT  0
	STC  116
	WRT  0
	STC  105
	WRT  0
	STC  118
	WRT  0
	STC  111
	WRT  0
	STC  46
	WRT  0
; Invocacion a cambiar_de_linea.
	OSF  4  1 L2
L7:
; Fin SI:
; Fin de la iteracion. Saltar a la cabecera del bucle.
	JMP  L5
L6:
; Fin MQ.
; Fin de la accion / funcion dato.
	CSF
; Accion fib.
L8:
	SRF  0  4
	ASGI
	SRF  0  3
	ASGI
; Reservamos direccion.
; Inicializamos con valor centinela.
	SRF  0  5
	STC  32768
	ASG 
; Reservamos direccion.
; Inicializamos con valor centinela.
	SRF  0  6
	STC  32768
	ASG 
; Comienzo de la accion fib.
; SI.
; Acceso a la variable n.
	SRF  0  3
	DRF
;Comprobamos si n esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	STC  1
	GT
	JMF  L9
; ENT.
; Invocacion a fib.
; Acceso a la variable n.
	SRF  0  3
	DRF
;Comprobamos si n esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	STC  1
	SBT
; Acceso a la variable r1.
	SRF  0  5
	OSF  6  1 L8
; Invocacion a fib.
; Acceso a la variable n.
	SRF  0  3
	DRF
;Comprobamos si n esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	STC  2
	SBT
; Acceso a la variable r2.
	SRF  0  6
	OSF  6  1 L8
; Direccion de la variable r.
	SRF  0  4
; Acceso a la variable r1.
	SRF  0  5
	DRF
;Comprobamos si r1 esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
; Acceso a la variable r2.
	SRF  0  6
	DRF
;Comprobamos si r2 esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	PLUS
; Asignacion.
	ASG
	JMP  L10
L9:
; SI_NO.
; Direccion de la variable r.
	SRF  0  4
; Acceso a la variable n.
	SRF  0  3
	DRF
;Comprobamos si n esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
; Asignacion.
	ASG
L10:
; Fin SI:
; Fin de la accion / funcion fib.
	CSF
L0:
; Comienzo del programa fibbonaci.
; Invocacion a dato.
; Acceso a la variable n.
	OSF  4  0 L3
; Invocacion a fib.
; Acceso a la variable n.
	SRF  0  3
	DRF
;Comprobamos si n esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
; Acceso a la variable r.
	SRF  0  4
	OSF  4  0 L8
; Escribir.
; cadena 'Fibbonaci('.
	STC  70
	WRT  0
	STC  105
	WRT  0
	STC  98
	WRT  0
	STC  98
	WRT  0
	STC  111
	WRT  0
	STC  110
	WRT  0
	STC  97
	WRT  0
	STC  99
	WRT  0
	STC  105
	WRT  0
	STC  40
	WRT  0
; Acceso a la variable n.
	SRF  0  3
	DRF
;Comprobamos si n esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	WRT  1
; cadena ') es: '.
	STC  41
	WRT  0
	STC  32
	WRT  0
	STC  101
	WRT  0
	STC  115
	WRT  0
	STC  58
	WRT  0
	STC  32
	WRT  0
; Acceso a la variable r.
	SRF  0  4
	DRF
;Comprobamos si r esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	WRT  1
; Invocacion a cambiar_de_linea.
	OSF  4  0 L2
FIN_PROGRAMA:
; Fin de programa fibbonaci.
	LVP
