; Programa nprimos.
	ENP  L0
	JMP  L1
error_inicializada:
;Escribir error en runtime.
	STC  69
	WRT  0
	STC  114
	WRT  0
	STC  114
	WRT  0
	STC  111
	WRT  0
	STC  114
	WRT  0
	STC  32
	WRT  0
	STC  101
	WRT  0
	STC  110
	WRT  0
	STC  32
	WRT  0
	STC  114
	WRT  0
	STC  117
	WRT  0
	STC  110
	WRT  0
	STC  116
	WRT  0
	STC  105
	WRT  0
	STC  109
	WRT  0
	STC  101
	WRT  0
	STC  58
	WRT  0
	STC  32
	WRT  0
	STC  118
	WRT  0
	STC  97
	WRT  0
	STC  114
	WRT  0
	STC  105
	WRT  0
	STC  97
	WRT  0
	STC  98
	WRT  0
	STC  108
	WRT  0
	STC  101
	WRT  0
	STC  32
	WRT  0
	STC  110
	WRT  0
	STC  111
	WRT  0
	STC  32
	WRT  0
	STC  105
	WRT  0
	STC  110
	WRT  0
	STC  105
	WRT  0
	STC  99
	WRT  0
	STC  105
	WRT  0
	STC  97
	WRT  0
	STC  108
	WRT  0
	STC  105
	WRT  0
	STC  122
	WRT  0
	STC  97
	WRT  0
	STC  100
	WRT  0
	STC  97
	WRT  0
	STC  46
	WRT  0
	STC  10
	WRT  0
	JMP  FIN_PROGRAMA
L1:
; Reservamos direccion.
; Inicializamos con valor centinela.
	SRF  0  3
	STC  32768
	ASG 
; Reservamos direccion.
; Inicializamos con valor centinela.
	SRF  0  4
	STC  32768
	ASG 
; Accion es_primo.
L2:
; Reservamos direccion.
; Inicializamos con valor centinela.
	SRF  0  3
	STC  32768
	ASG 
; Reservamos direccion.
; Inicializamos con valor centinela.
	SRF  0  4
	STC  32768
	ASG 
; Comienzo de la accion es_primo.
; Direccion de la variable divisible.
	SRF  0  4
	STC  0
; Asignacion.
	ASG
L3:
; MQ.
; Acceso a la variable j.
	SRF  0  3
	DRF
;Comprobamos si j esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
; Acceso a la variable i.
	SRF  1  4
	DRF
;Comprobamos si i esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	STC  2
	DIV
	LT
; Acceso a la variable divisible.
	SRF  0  4
	DRF
;Comprobamos si divisible esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	NGB
	AND
; Salir del bucle si la guarda se evalua a falso.
	JMF  L4
; Direccion de la variable divisible.
	SRF  0  4
; Acceso a la variable i.
	SRF  1  4
	DRF
;Comprobamos si i esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
; Acceso a la variable j.
	SRF  0  3
	DRF
;Comprobamos si j esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	MOD
	STC  0
	EQ
; Asignacion.
	ASG
; Direccion de la variable j.
	SRF  0  3
; Acceso a la variable j.
	SRF  0  3
	DRF
;Comprobamos si j esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	STC  1
	PLUS
; Asignacion.
	ASG
; Fin de la iteracion. Saltar a la cabecera del bucle.
	JMP  L3
L4:
; Fin MQ.
; SI.
; Acceso a la variable divisible.
	SRF  0  4
	DRF
;Comprobamos si divisible esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	NGB
	JMF  L5
; ENT.
; Escribir.
; Acceso a la variable i.
	SRF  1  4
	DRF
;Comprobamos si i esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	WRT  1
; cadena 'es primo.'.
	STC  101
	WRT  0
	STC  115
	WRT  0
	STC  32
	WRT  0
	STC  112
	WRT  0
	STC  114
	WRT  0
	STC  105
	WRT  0
	STC  109
	WRT  0
	STC  111
	WRT  0
	STC  46
	WRT  0
	STC  13
	WRT  0
	STC  10
	WRT  0
L5:
; Fin SI:
; Fin de la accion / funcion es_primo.
	CSF
L0:
; Comienzo del programa nprimos.
; Direccion de la variable n.
	SRF  0  3
	STC  100
; Asignacion.
	ASG
; Direccion de la variable i.
	SRF  0  4
	STC  2
; Asignacion.
	ASG
L6:
; MQ.
; Acceso a la variable i.
	SRF  0  4
	DRF
;Comprobamos si i esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
; Acceso a la variable n.
	SRF  0  3
	DRF
;Comprobamos si n esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	LTE
; Salir del bucle si la guarda se evalua a falso.
	JMF  L7
; Invocacion a es_primo.
	OSF  4  0 L2
; Direccion de la variable i.
	SRF  0  4
; Acceso a la variable i.
	SRF  0  4
	DRF
;Comprobamos si i esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	STC  1
	PLUS
; Asignacion.
	ASG
; Fin de la iteracion. Saltar a la cabecera del bucle.
	JMP  L6
L7:
; Fin MQ.
FIN_PROGRAMA:
; Fin de programa nprimos.
	LVP
