; Programa noventa_y_nueve.
	ENP  L0
error_inicializada:
;Escribir error en runtime.
	STC  69
	WRT  0
	STC  114
	WRT  0
	STC  114
	WRT  0
	STC  111
	WRT  0
	STC  114
	WRT  0
	STC  32
	WRT  0
	STC  101
	WRT  0
	STC  110
	WRT  0
	STC  32
	WRT  0
	STC  114
	WRT  0
	STC  117
	WRT  0
	STC  110
	WRT  0
	STC  116
	WRT  0
	STC  105
	WRT  0
	STC  109
	WRT  0
	STC  101
	WRT  0
	STC  58
	WRT  0
	STC  32
	WRT  0
	STC  118
	WRT  0
	STC  97
	WRT  0
	STC  114
	WRT  0
	STC  105
	WRT  0
	STC  97
	WRT  0
	STC  98
	WRT  0
	STC  108
	WRT  0
	STC  101
	WRT  0
	STC  32
	WRT  0
	STC  110
	WRT  0
	STC  111
	WRT  0
	STC  32
	WRT  0
	STC  105
	WRT  0
	STC  110
	WRT  0
	STC  105
	WRT  0
	STC  99
	WRT  0
	STC  105
	WRT  0
	STC  97
	WRT  0
	STC  108
	WRT  0
	STC  105
	WRT  0
	STC  122
	WRT  0
	STC  97
	WRT  0
	STC  100
	WRT  0
	STC  97
	WRT  0
	STC  46
	WRT  0
	STC  10
	WRT  0
	JMP  FIN_PROGRAMA
; Reservamos direccion.
; Inicializamos con valor centinela.
	SRF  0  3
	STC  32768
	ASG 
; Reservamos direccion.
; Inicializamos con valor centinela.
	SRF  0  4
	STC  32768
	ASG 
; Reservamos direccion.
; Inicializamos con valor centinela.
	SRF  0  5
	STC  32768
	ASG 
; Reservamos direccion.
; Inicializamos con valor centinela.
	SRF  0  6
	STC  32768
	ASG 
; Reservamos direccion.
; Inicializamos con valor centinela.
	SRF  0  7
	STC  32768
	ASG 
L0:
; Comienzo del programa noventa_y_nueve.
; Direccion de la variable n.
	SRF  0  5
	STC  0
; Asignacion.
	ASG
L1:
; MQ.
; Acceso a la variable n.
	SRF  0  5
	DRF
;Comprobamos si n esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	STC  0
	LTE
; Acceso a la variable n.
	SRF  0  5
	DRF
;Comprobamos si n esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	STC  100
	GTE
	OR
; Acceso a la variable n.
	SRF  0  5
	DRF
;Comprobamos si n esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	STC  10
	DIV
; Acceso a la variable n.
	SRF  0  5
	DRF
;Comprobamos si n esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	STC  10
	MOD
	EQ
	OR
; Salir del bucle si la guarda se evalua a falso.
	JMF  L2
; Escribir.
; cadena 'n: '.
	STC  110
	WRT  0
	STC  58
	WRT  0
	STC  32
	WRT  0
; Leer.
	SRF  0  5
	RD  1
; Fin de la iteracion. Saltar a la cabecera del bucle.
	JMP  L1
L2:
; Fin MQ.
; Escribir.
; Acceso a la variable n.
	SRF  0  5
	DRF
;Comprobamos si n esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	WRT  1
; Escribir.
; cadena ' se convierte en '.
	STC  32
	WRT  0
	STC  115
	WRT  0
	STC  101
	WRT  0
	STC  32
	WRT  0
	STC  99
	WRT  0
	STC  111
	WRT  0
	STC  110
	WRT  0
	STC  118
	WRT  0
	STC  105
	WRT  0
	STC  101
	WRT  0
	STC  114
	WRT  0
	STC  116
	WRT  0
	STC  101
	WRT  0
	STC  32
	WRT  0
	STC  101
	WRT  0
	STC  110
	WRT  0
	STC  32
	WRT  0
; Direccion de la variable x.
	SRF  0  3
; Acceso a la variable n.
	SRF  0  5
	DRF
;Comprobamos si n esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	STC  10
	DIV
; Asignacion.
	ASG
; Direccion de la variable y.
	SRF  0  4
; Acceso a la variable n.
	SRF  0  5
	DRF
;Comprobamos si n esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	STC  10
	MOD
; Asignacion.
	ASG
; Direccion de la variable m.
	SRF  0  6
	STC  10
; Acceso a la variable y.
	SRF  0  4
	DRF
;Comprobamos si y esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	TMS
; Acceso a la variable x.
	SRF  0  3
	DRF
;Comprobamos si x esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	PLUS
; Asignacion.
	ASG
; SI.
; Acceso a la variable n.
	SRF  0  5
	DRF
;Comprobamos si n esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
; Acceso a la variable m.
	SRF  0  6
	DRF
;Comprobamos si m esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	GT
	JMF  L3
; ENT.
; Direccion de la variable n.
	SRF  0  5
; Acceso a la variable n.
	SRF  0  5
	DRF
;Comprobamos si n esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
; Acceso a la variable m.
	SRF  0  6
	DRF
;Comprobamos si m esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	SBT
; Asignacion.
	ASG
	JMP  L4
L3:
; SI_NO.
; Direccion de la variable n.
	SRF  0  5
; Acceso a la variable m.
	SRF  0  6
	DRF
;Comprobamos si m esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
; Acceso a la variable n.
	SRF  0  5
	DRF
;Comprobamos si n esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	SBT
; Asignacion.
	ASG
L4:
; Fin SI:
; Direccion de la variable x.
	SRF  0  3
; Acceso a la variable n.
	SRF  0  5
	DRF
;Comprobamos si n esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	STC  10
	DIV
; Asignacion.
	ASG
; Direccion de la variable y.
	SRF  0  4
; Acceso a la variable n.
	SRF  0  5
	DRF
;Comprobamos si n esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	STC  10
	MOD
; Asignacion.
	ASG
; Direccion de la variable m.
	SRF  0  6
	STC  10
; Acceso a la variable y.
	SRF  0  4
	DRF
;Comprobamos si y esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	TMS
; Acceso a la variable x.
	SRF  0  3
	DRF
;Comprobamos si x esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	PLUS
; Asignacion.
	ASG
; Direccion de la variable n.
	SRF  0  5
; Acceso a la variable m.
	SRF  0  6
	DRF
;Comprobamos si m esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
; Acceso a la variable n.
	SRF  0  5
	DRF
;Comprobamos si n esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	PLUS
; Asignacion.
	ASG
; Escribir.
; Acceso a la variable n.
	SRF  0  5
	DRF
;Comprobamos si n esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	WRT  1
; Escribir.
	STC  13
	WRT  0
; Escribir.
	STC  10
	WRT  0
FIN_PROGRAMA:
; Fin de programa noventa_y_nueve.
	LVP
