; Programa adivinar.
	ENP  L0
error_inicializada:
;Escribir error en runtime.
	STC  69
	WRT  0
	STC  114
	WRT  0
	STC  114
	WRT  0
	STC  111
	WRT  0
	STC  114
	WRT  0
	STC  32
	WRT  0
	STC  101
	WRT  0
	STC  110
	WRT  0
	STC  32
	WRT  0
	STC  114
	WRT  0
	STC  117
	WRT  0
	STC  110
	WRT  0
	STC  116
	WRT  0
	STC  105
	WRT  0
	STC  109
	WRT  0
	STC  101
	WRT  0
	STC  58
	WRT  0
	STC  32
	WRT  0
	STC  118
	WRT  0
	STC  97
	WRT  0
	STC  114
	WRT  0
	STC  105
	WRT  0
	STC  97
	WRT  0
	STC  98
	WRT  0
	STC  108
	WRT  0
	STC  101
	WRT  0
	STC  32
	WRT  0
	STC  110
	WRT  0
	STC  111
	WRT  0
	STC  32
	WRT  0
	STC  105
	WRT  0
	STC  110
	WRT  0
	STC  105
	WRT  0
	STC  99
	WRT  0
	STC  105
	WRT  0
	STC  97
	WRT  0
	STC  108
	WRT  0
	STC  105
	WRT  0
	STC  122
	WRT  0
	STC  97
	WRT  0
	STC  100
	WRT  0
	STC  97
	WRT  0
	STC  46
	WRT  0
	STC  10
	WRT  0
	JMP  FIN_PROGRAMA
; Reservamos direccion.
; Inicializamos con valor centinela.
	SRF  0  3
	STC  32768
	ASG 
; Reservamos direccion.
; Inicializamos con valor centinela.
	SRF  0  4
	STC  32768
	ASG 
; Reservamos direccion.
; Inicializamos con valor centinela.
	SRF  0  5
	STC  32768
	ASG 
; Reservamos direccion.
; Inicializamos con valor centinela.
	SRF  0  6
	STC  32768
	ASG 
; Reservamos direccion.
; Inicializamos con valor centinela.
	SRF  0  7
	STC  32768
	ASG 
; Reservamos direccion.
; Inicializamos con valor centinela.
	SRF  0  8
	STC  32768
	ASG 
; Reservamos direccion.
; Inicializamos con valor centinela.
	SRF  0  9
	STC  32768
	ASG 
; Accion siono.
L1:
; Reservamos direccion.
; Inicializamos con valor centinela.
	SRF  0  3
	STC  32768
	ASG 
; Reservamos direccion.
; Inicializamos con valor centinela.
	SRF  0  4
	STC  32768
	ASG 
	JMP  L2
; Comienzo de la accion siono.
L2:
; Direccion de la variable c.
	SRF  0  3
	STC  32
; Asignacion.
	ASG
L3:
; MQ.
; Acceso a la variable c.
	SRF  0  3
	DRF
;Comprobamos si c esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	STC  83
	NEQ
; Acceso a la variable c.
	SRF  0  3
	DRF
;Comprobamos si c esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	STC  78
	NEQ
	AND
; Salir del bucle si la guarda se evalua a falso.
	JMF  L4
; Escribir.
; cadena '(S/N)?'.
	STC  40
	WRT  0
	STC  83
	WRT  0
	STC  47
	WRT  0
	STC  78
	WRT  0
	STC  41
	WRT  0
	STC  63
	WRT  0
; Leer.
	SRF  0  3
	RD  0
; Leer.
	SRF  0  4
	RD  0
; Fin de la iteracion. Saltar a la cabecera del bucle.
	JMP  L3
L4:
; Fin MQ.
; Direccion de la variable respuesta.
	SRF  1  3
; Acceso a la variable c.
	SRF  0  3
	DRF
;Comprobamos si c esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
; Asignacion.
	ASG
; Fin de la accion / funcion siono.
	CSF
; Accion pedirletra.
L5:
; Reservamos direccion.
; Inicializamos con valor centinela.
	SRF  0  3
	STC  32768
	ASG 
; Reservamos direccion.
; Inicializamos con valor centinela.
	SRF  0  4
	STC  32768
	ASG 
	JMP  L6
; Comienzo de la accion pedirletra.
L6:
; Direccion de la variable c.
	SRF  0  3
	STC  32
; Asignacion.
	ASG
L7:
; MQ.
; Acceso a la variable c.
	SRF  0  3
	DRF
;Comprobamos si c esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	STC  65
	LT
; Acceso a la variable c.
	SRF  0  3
	DRF
;Comprobamos si c esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	STC  90
	GT
	OR
; Salir del bucle si la guarda se evalua a falso.
	JMF  L8
; Escribir.
; cadena 'letra:'.
	STC  108
	WRT  0
	STC  101
	WRT  0
	STC  116
	WRT  0
	STC  114
	WRT  0
	STC  97
	WRT  0
	STC  58
	WRT  0
; Leer.
	SRF  0  3
	RD  0
; Leer.
	SRF  0  4
	RD  0
; Fin de la iteracion. Saltar a la cabecera del bucle.
	JMP  L7
L8:
; Fin MQ.
; Direccion de la variable respuesta.
	SRF  1  3
; Acceso a la variable c.
	SRF  0  3
	DRF
;Comprobamos si c esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
; Asignacion.
	ASG
; Fin de la accion / funcion pedirletra.
	CSF
L0:
; Comienzo del programa adivinar.
; Escribir.
; cadena 'Piensa en una letra e intentare adivinarla.'.
	STC  80
	WRT  0
	STC  105
	WRT  0
	STC  101
	WRT  0
	STC  110
	WRT  0
	STC  115
	WRT  0
	STC  97
	WRT  0
	STC  32
	WRT  0
	STC  101
	WRT  0
	STC  110
	WRT  0
	STC  32
	WRT  0
	STC  117
	WRT  0
	STC  110
	WRT  0
	STC  97
	WRT  0
	STC  32
	WRT  0
	STC  108
	WRT  0
	STC  101
	WRT  0
	STC  116
	WRT  0
	STC  114
	WRT  0
	STC  97
	WRT  0
	STC  32
	WRT  0
	STC  101
	WRT  0
	STC  32
	WRT  0
	STC  105
	WRT  0
	STC  110
	WRT  0
	STC  116
	WRT  0
	STC  101
	WRT  0
	STC  110
	WRT  0
	STC  116
	WRT  0
	STC  97
	WRT  0
	STC  114
	WRT  0
	STC  101
	WRT  0
	STC  32
	WRT  0
	STC  97
	WRT  0
	STC  100
	WRT  0
	STC  105
	WRT  0
	STC  118
	WRT  0
	STC  105
	WRT  0
	STC  110
	WRT  0
	STC  97
	WRT  0
	STC  114
	WRT  0
	STC  108
	WRT  0
	STC  97
	WRT  0
	STC  46
	WRT  0
; Escribir.
	STC  13
	WRT  0
; Escribir.
	STC  10
	WRT  0
; Escribir.
; cadena 'Listo?'.
	STC  76
	WRT  0
	STC  105
	WRT  0
	STC  115
	WRT  0
	STC  116
	WRT  0
	STC  111
	WRT  0
	STC  63
	WRT  0
; Invocacion a siono.
	OSF  9  0 L1
; Direccion de la variable min.
	SRF  0  5
	STC  65
; Asignacion.
	ASG
; Direccion de la variable max.
	SRF  0  6
	STC  90
; Asignacion.
	ASG
; Direccion de la variable headivinado.
	SRF  0  7
	STC  0
; Asignacion.
	ASG
L9:
; MQ.
; Acceso a la variable min.
	SRF  0  5
	DRF
;Comprobamos si min esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
; Acceso a la variable max.
	SRF  0  6
	DRF
;Comprobamos si max esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	NEQ
; Acceso a la variable headivinado.
	SRF  0  7
	DRF
;Comprobamos si headivinado esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	NGB
	AND
; Salir del bucle si la guarda se evalua a falso.
	JMF  L10
; Direccion de la variable letra.
	SRF  0  4
; Acceso a la variable min.
	SRF  0  5
	DRF
;Comprobamos si min esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
; Acceso a la variable max.
	SRF  0  6
	DRF
;Comprobamos si max esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	PLUS
	STC  2
	DIV
; Asignacion.
	ASG
; Escribir.
; caracter '('.
	STC  40
	WRT  0
; Escribir.
; Acceso a la variable min.
	SRF  0  5
	DRF
;Comprobamos si min esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	WRT  0
; Escribir.
; caracter ','.
	STC  44
	WRT  0
; Escribir.
; Acceso a la variable max.
	SRF  0  6
	DRF
;Comprobamos si max esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	WRT  0
; Escribir.
; caracter ')'.
	STC  41
	WRT  0
; Escribir.
; cadena ': has pensado en la letra '.
	STC  58
	WRT  0
	STC  32
	WRT  0
	STC  104
	WRT  0
	STC  97
	WRT  0
	STC  115
	WRT  0
	STC  32
	WRT  0
	STC  112
	WRT  0
	STC  101
	WRT  0
	STC  110
	WRT  0
	STC  115
	WRT  0
	STC  97
	WRT  0
	STC  100
	WRT  0
	STC  111
	WRT  0
	STC  32
	WRT  0
	STC  101
	WRT  0
	STC  110
	WRT  0
	STC  32
	WRT  0
	STC  108
	WRT  0
	STC  97
	WRT  0
	STC  32
	WRT  0
	STC  108
	WRT  0
	STC  101
	WRT  0
	STC  116
	WRT  0
	STC  114
	WRT  0
	STC  97
	WRT  0
	STC  32
	WRT  0
; Escribir.
; Acceso a la variable letra.
	SRF  0  4
	DRF
;Comprobamos si letra esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	WRT  0
; Escribir.
; caracter '?'.
	STC  63
	WRT  0
; Invocacion a siono.
	OSF  9  0 L1
; SI.
; Acceso a la variable respuesta.
	SRF  0  3
	DRF
;Comprobamos si respuesta esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	STC  78
	EQ
	JMF  L11
; ENT.
; Escribir.
; cadena 'La letra que has pensado es mayor?'.
	STC  76
	WRT  0
	STC  97
	WRT  0
	STC  32
	WRT  0
	STC  108
	WRT  0
	STC  101
	WRT  0
	STC  116
	WRT  0
	STC  114
	WRT  0
	STC  97
	WRT  0
	STC  32
	WRT  0
	STC  113
	WRT  0
	STC  117
	WRT  0
	STC  101
	WRT  0
	STC  32
	WRT  0
	STC  104
	WRT  0
	STC  97
	WRT  0
	STC  115
	WRT  0
	STC  32
	WRT  0
	STC  112
	WRT  0
	STC  101
	WRT  0
	STC  110
	WRT  0
	STC  115
	WRT  0
	STC  97
	WRT  0
	STC  100
	WRT  0
	STC  111
	WRT  0
	STC  32
	WRT  0
	STC  101
	WRT  0
	STC  115
	WRT  0
	STC  32
	WRT  0
	STC  109
	WRT  0
	STC  97
	WRT  0
	STC  121
	WRT  0
	STC  111
	WRT  0
	STC  114
	WRT  0
	STC  63
	WRT  0
; Invocacion a siono.
	OSF  9  0 L1
; SI.
; Acceso a la variable respuesta.
	SRF  0  3
	DRF
;Comprobamos si respuesta esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	STC  83
	EQ
	JMF  L12
; ENT.
; Direccion de la variable min.
	SRF  0  5
; Acceso a la variable letra.
	SRF  0  4
	DRF
;Comprobamos si letra esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	STC  1
	PLUS
; Asignacion.
	ASG
	JMP  L13
L12:
; SI_NO.
; Direccion de la variable max.
	SRF  0  6
; Acceso a la variable letra.
	SRF  0  4
	DRF
;Comprobamos si letra esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	STC  1
	SBT
; Asignacion.
	ASG
L13:
; Fin SI:
	JMP  L14
L11:
; SI_NO.
; Direccion de la variable headivinado.
	SRF  0  7
	STC  1
; Asignacion.
	ASG
L14:
; Fin SI:
; Fin de la iteracion. Saltar a la cabecera del bucle.
	JMP  L9
L10:
; Fin MQ.
; SI.
; Acceso a la variable headivinado.
	SRF  0  7
	DRF
;Comprobamos si headivinado esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	NGB
	JMF  L15
; ENT.
; Escribir.
; cadena 'La letra es la '.
	STC  76
	WRT  0
	STC  97
	WRT  0
	STC  32
	WRT  0
	STC  108
	WRT  0
	STC  101
	WRT  0
	STC  116
	WRT  0
	STC  114
	WRT  0
	STC  97
	WRT  0
	STC  32
	WRT  0
	STC  101
	WRT  0
	STC  115
	WRT  0
	STC  32
	WRT  0
	STC  108
	WRT  0
	STC  97
	WRT  0
	STC  32
	WRT  0
; Escribir.
; Acceso a la variable min.
	SRF  0  5
	DRF
;Comprobamos si min esta inicializada.
	DUP
	STC  32768
	EQ
	JMT  error_inicializada
;sino, seguimos ejecucion.
	WRT  0
; Escribir.
	STC  13
	WRT  0
; Escribir.
	STC  10
	WRT  0
L15:
; Fin SI:
FIN_PROGRAMA:
; Fin de programa adivinar.
	LVP
